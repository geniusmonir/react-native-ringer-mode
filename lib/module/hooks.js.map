{"version":3,"sources":["hooks.ts"],"names":["useState","useEffect","getRingerMode","setRingerMode","useRingerMode","mode","setCurrentMode","error","setError","currentMode","err","setMode","newMode"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6D,UAA7D;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAM,CAACC,IAAD,EAAOC,cAAP,IAAyBN,QAAQ,EAAvC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAM,IAAN,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAI;AACF,cAAMQ,WAAW,GAAG,MAAMP,aAAa,EAAvC;AACAI,QAAAA,cAAc,CAACG,WAAD,CAAd;AACD,OAHD,CAGE,OAAOC,GAAP,EAAiB;AACjBF,QAAAA,QAAQ,CAACE,GAAD,CAAR;AACD;AACF,KAPD;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,OAAO,GAAG,MAAOC,OAAP,IAAmC;AACjDJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAMC,WAAW,GAAG,MAAMN,aAAa,CAACS,OAAD,CAAvC;AACAN,MAAAA,cAAc,CAACG,WAAD,CAAd;AACD,KAHD,CAGE,OAAOC,GAAP,EAAiB;AACjBF,MAAAA,QAAQ,CAACE,GAAD,CAAR;AACD;AACF,GATD;;AAWA,SAAO;AAAEL,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeI,IAAAA;AAAf,GAAP;AACD,CA3BM","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { getRingerMode, setRingerMode, RingerModeType } from './native';\n\nexport const useRingerMode = () => {\n  const [mode, setCurrentMode] = useState<RingerModeType | undefined>();\n  const [error, setError] = useState<any>(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const currentMode = await getRingerMode();\n        setCurrentMode(currentMode);\n      } catch (err: any) {\n        setError(err);\n      }\n    })();\n  }, []);\n\n  const setMode = async (newMode: RingerModeType) => {\n    setError(null);\n\n    try {\n      const currentMode = await setRingerMode(newMode);\n      setCurrentMode(currentMode);\n    } catch (err: any) {\n      setError(err);\n    }\n  };\n\n  return { mode, error, setMode };\n};\n"]}